<!DOCTYPE html>
<html lang="en" xmlns:fb="https://www.facebook.com/2008/fbml">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Meme Captain meme generator</title>
<style type="text/css">
body {
  font-family : verdana, helvetica, arial, sans-serif;
}

img.thumb {
  margin : 2px;
}

#heading {
  font-size : 1em;
  font-weight : normal;
}

#chooseSourceImage {
  border-bottom : 1px solid #808080;
  padding : 0.25em 1em 0.25em 1em;
}

#chooseText {
  border-bottom : 1px solid #808080;
  padding : 0.25em 1em 0.25em 1em;
}

#positionText {
  border-bottom : 1px solid #808080;
  padding : 0.25em 1em 1.25em 1em;
}

#createdImageContainer {
  border-bottom : 1px solid #808080;
  padding : 0.25em 1em 0.25em 1em;
}
</style>
</head>

<body>

<h1 id="heading"><a href="<%= h @root_url %>">Meme Captain</a> - make memes with images and text</h1>

<div id="chooseSourceImage">

<p>
Enter an image URL, click a thumbnail or search for an image then click its
thumbnail.
</p>

<p>
<label for="u">Source image URL: </label>
<input type="text" id="u" name="u" size="64" value="<%= h @u %>" />
</p>

<div id="localSourceImages"></div>

<p>
<input type="text" id="imageSearch" />
<input type="button" id="imageSearchButton" value="Image Search" /> powered by Bing and Google
</p>

<div id="imageSearchResults"></div>

</div>

<div id="chooseText">

<p>
<label for="t1">Text 1: </label></td>
<input type="text" id="t1" name="t1" size="64" value="<%= h @t1 %>" />
</p>

<p>
<label for="t2">Text 2: </label>
<input type="text" id="t2" name="t2" size="64" value="<%= h @t2 %>" />
</p>

</div>

<div id="positionText">

<p>
<input type="button" id="positionTextButton" value="Position Text" />
Optionally set the position and size of the text on the image.
</p>

<table>

<tr>

<td><label for="t1x">Text 1 X: </label></td>
<td><input type="text" id="t1x" name="t1x" size="4" value="<%= h @t1x %>" /></td>

<td><label for="t1y">Y: </label></td>
<td><input type="text" id="t1y" name="t1y" size="4" value="<%= h @t1y %>" /></td>

<td><label for="t1w">Width: </label></td>
<td><input type="text" id="t1w" name="t1w" size="4" value="<%= h @t1w %>" /></td>

<td><label for="t1h">Height: </label></td>
<td><input type="text" id="t1h" name="t1h" size="4" value="<%= h @t1h %>" /></td>

</tr>

<tr>

<td><label for="t2x">Text 2 X: </label></td>
<td><input type="text" id="t2x" name="t2x" size="4" value="<%= h @t2x %>" /></td>

<td><label for="t2y">Y: </label></td>
<td><input type="text" id="t2y" name="t2y" size="4" value="<%= h @t2y %>" /></td>

<td><label for="t2w">Width: </label></td>
<td><input type="text" id="t2w" name="t2w" size="4" value="<%= h @t2w %>" /></td>

<td><label for="t2h">Height: </label></td>
<td><input type="text" id="t2h" name="t2h" size="4" value="<%= h @t2h %>" /></td>

</tr>

</table>

<div id="positionTextCanvasDiv"></div>

</div>

<div id="createdImageContainer">

<p>
<input type="button" id="createImageButton" value="Create Image" />
</p>

<div id="createdImage"></div>

</div>

<p>
Contact: Matthew M. Boedicker <a href="mailto:matthewm@boedicker.org">matthewm@boedicker.org</a> |
<a href="http://twitter.com/memecaptain">@memecaptain</a>
</p>

<p><a href="https://github.com/mmb/meme_captain">source code and API</a></p>

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script src="js/fabric.min.js"></script>
<script>
function setSourceUrl(sourceUrl) {
    "use strict";

    $('#u').val(sourceUrl);
    $('#t1x,#t1y,#t1w,#t1h,#t2x,#t2y,#t2w,#t2h').val('');
    $('#positionTextCanvasDiv').empty();
}

function showBingImages(resp) {
    "use strict";

    var div = $('#imageSearchResults'),
        searchResponse = resp.SearchResponse,
        image = searchResponse.Image;

    if (image.Total > 0) {
        $.each(image.Results, function (i, img) {
            div.append($('<img />').attr('src', img.Thumbnail.Url).click(
                function () { setSourceUrl(img.MediaUrl); }
            ));
        });
    } else {
        div.append($('<p />').append(
            'No Bing results for "' + searchResponse.Query.SearchTerms + '".'
        ));
    }
}

function showGoogleImages(resp) {
    "use strict";

    var div = $('#imageSearchResults'),
        searchResults = resp.responseData.results;

    if (searchResults.length > 0) {
        $.each(searchResults, function (i, img) {
            div.append($('<img />').attr('src', img.tbUrl).click(
                function () { setSourceUrl(img.url); }
            ));
        });
    } else {
        div.append($('<p />').append('No Google results.'));
    }
}

function imageSearch() {
    "use strict";

    var imageSearchInput = $('#imageSearch'),
        imageSearchVal = imageSearchInput.val();

    if (imageSearchVal.match(/[^\s]/)) {
        imageSearchInput.val('');
        $('#imageSearchResults').empty();

        $.ajax({
            type : 'GET',
            url : 'http://api.bing.net/json.aspx',
            data : {
                AppId : 'A120380275E87F0071F163210211F0592D0E964C',
                Query : imageSearchVal + ' imagesize:Medium',
                Sources : 'Image',
                Version : '2.0',
                Market : 'en-us',
                'Image.Count' : 5,
                'Image.Offset' : 0,
                JsonType : 'callback'
            },
            dataType : 'jsonp',
            jsonpCallback : 'showBingImages',
            jsonp : 'JsonCallback'
        });

        $.ajax({
            type : 'GET',
            url : 'http://ajax.googleapis.com/ajax/services/search/images',
            data : {
                imgsz : 'large',
                key : 'ABQIAAAA-E0uJIHoMJX6M6atCgYANRS1DzXPXMqKnKNRJm2Z_PRWxvtqGBSOvBqyXOwxGZU5jLxExg_5ym69rw',
                q : imageSearchVal,
                rsz : '5',
                v : '1.0'
            },
            dataType : 'jsonp',
            jsonpCallback : 'showGoogleImages'
        });
    }
}

function loadSourceImages() {
    "use strict";

    $.get('source_images.json', function (data) {
        var pos = 0,
            div = $('#localSourceImages');

        $.each(data.images, function (i, img) {
            div.append($('<img />').attr('src', '1.gif').addClass('thumb').css({
                'background-image' : 'url(' + data.thumbSpritesUrl + ')',
                'background-position' : pos + 'px 0px',
                height : data.thumbHeight,
                width : img.thumbWidth + 'px'
            }).click(function () { setSourceUrl(img.url); }));

            pos -= img.thumbWidth;
        });
    });
}

function positionText() {
    "use strict";

    var imageUrl = $('#u').val(),

        canvas,
        canvasHeight,
        canvasWidth,

        rect1,
        rect2;

    if (imageUrl.length > 0) {
        $('#positionTextCanvasDiv').empty().append($('<canvas />').attr({
            id : 'positionTextCanvas'
        }));

        canvas = new fabric.Canvas('positionTextCanvas');

        canvas.setBackgroundImage(imageUrl, function () {
            var canvasWidth,
                canvasHeight,
                textWidth,
                textHeight;

            canvas.setWidth(canvas.backgroundImage.width);
            canvas.setHeight(canvas.backgroundImage.height);

            canvas.renderAll.bind(canvas);

            canvasWidth = canvas.getWidth();
            canvasHeight = canvas.getHeight();
            textWidth = 0.9 * canvasWidth;
            textHeight = 0.25 * canvasHeight;

            rect1 = new fabric.Rect({
                top  : textHeight / 2.0,
                left : canvasWidth / 2.0,
                width : textWidth,
                height : textHeight,
                fill : 'red'
            });

            rect1.name = '1';
            rect1.set('lockRotation', true);

            canvas.add(rect1);

            rect2 = new fabric.Rect({
                top : canvasHeight - (textHeight / 2.0),
                left : canvasWidth / 2.0,
                width : textWidth,
                height : textHeight,
                fill: 'red'
            });

            rect2.name = '2';
            rect2.set('lockRotation', true);

            canvas.add(rect2);

            canvas.observe('object:modified', function (o) {
                var target = o.memo.target;

                $('#t' + target.name + 'x').val(
                    Math.round(target.getLeft() - (target.getWidth() / 2))
                );
                $('#t' + target.name + 'y').val(
                    Math.round(target.getTop() - (target.getHeight() / 2))
                );
                $('#t' + target.name + 'w').val(Math.round(target.getWidth()));
                $('#t' + target.name + 'h').val(Math.round(target.getHeight()));
            });

            canvas.fire('object:modified', { target : rect1 });
            canvas.fire('object:modified', { target : rect2 });
        });
    }
}

function createImage() {
    "use strict";

    var createdImageDiv = $('#createdImage');

    $('#positionTextCanvasDiv').empty();

    createdImageDiv.append($('<p />').append('Creating image ...'));

    $.get('/g', {
        u  : $('#u').val(),
        t1 : $('#t1').val(),
        t2 : $('#t2').val(),

        t1x : $('#t1x').val(),
        t1y : $('#t1y').val(),
        t1w : $('#t1w').val(),
        t1h : $('#t1h').val(),

        t2x : $('#t2x').val(),
        t2y : $('#t2y').val(),
        t2w : $('#t2w').val(),
        t2h : $('#t2h').val()
    }, function (data) {
        var img = $('<img />').attr('src', data.imageUrl),
            imgLink = $('<a />').attr('href', data.imageUrl).append(
                data.imageUrl
            ),
            tweetLink = $('<a />').attr({
                href : 'http://twitter.com/share',
                'class' : 'twitter-share-button',
                'data-count' : 'none',
                'data-text' : ' ',
                'data-url' : data.imageUrl
            }).append('Tweet');

        createdImageDiv.empty().append(img).append(
            $('<p />').append('Image: ').append(imgLink)
        );

        // tweet link
        createdImageDiv.append($('<p />').append(tweetLink).append(
            $('<script />').attr('src',
                'http://platform.twitter.com/widgets.js')
        ));

        // Facebook like
        createdImageDiv.append(
            $('<div />').attr('id', 'fb-root')
        ).append(
            $('<fb:like />').attr({
                href : data.imageUrl,
                send : 'true',
                width : '450',
                show_faces : 'true',
                font : ''
            })
        );

        window.fbAsyncInit = function () {
            FB.init({
                appId : '108445492580525',
                status : true,
                cookie : true,
                xfbml : true
            });
        };

        createdImageDiv.append($('<script />').attr({
            src : 'http://connect.facebook.net/en_US/all.js'
        }));
    }).error(function (j) {
        createdImageDiv.empty().append($('<p />').text(j.responseText));
    });
}

$(function () {
    "use strict";

    loadSourceImages();

    $('#imageSearch').keypress(function (event) {
        if (event.which === 13) {
            event.preventDefault();
            imageSearch();
        }
    });

    $('#imageSearchButton').click(imageSearch);

    $('#positionTextButton').click(positionText);

    $('#createImageButton').click(createImage);
});
</script>

</body>

</html>
